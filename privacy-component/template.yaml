AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

# custom user defined parameters
Parameters:
 # deployment stage
  deploymentEnvironment:
    Type: String
    Default: "test"
  # target s3 bucket where the privacy conform access should be added
  S3BucketName:
    Type: String
    Default: "peng-test-data"
  # Interceptors from interceptor-config.json that should be included to the privacy interceptor
  Interceptors:
    Type: String
    Default: '["TUCancerResearchJPGInterceptor", "ResearchJPGInterceptor", "NoMetadataJPGInterceptor"]'

Globals:
  Function:
    Timeout: 200
    MemorySize: 1024

Resources:
  ### Privacy Interceptor
  # Privacy Lambda
  PrivacyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Runtime: nodejs16.x
      Handler: privacy-lambda.handler
      Policies:
        - AmazonS3FullAccess

  # S3 Support Access Point required by S3 Object Lambda
  SupportAccessPoint:
    Type: 'AWS::S3::AccessPoint'
    Properties:
      Bucket: !Ref S3BucketName
      Name: !Sub "${S3BucketName}-support"

  # S3 Object Lambda access point
  PrivacyS3ObjectLambdaAccessPoint:
    Type: 'AWS::S3ObjectLambda::AccessPoint'
    Properties: 
      Name:  !Sub "${S3BucketName}-privacy"
      ObjectLambdaConfiguration:
        SupportingAccessPoint: !Sub 'arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${SupportAccessPoint}'
        TransformationConfigurations: 
        - Actions:
            - GetObject
          ContentTransformation: 
            AwsLambda:
              FunctionArn: !GetAtt PrivacyLambda.Arn
              FunctionPayload: !Ref Interceptors

  ### Microservice to access object from S3 Object Lambda 
  # Get api for accessing s3 object lambda
  GetS3ObjectApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${S3BucketName}-anonAccess"
      BinaryMediaTypes:
        - '*/*'
      StageName: !Ref deploymentEnvironment

  # Authorized Service for accessing s3 object lambda
  GetS3ObjectLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Runtime: python3.8
      Handler: get-object.lambda_handler
      Environment:
        Variables:
          S3_ACCESS_POINT: !GetAtt PrivacyS3ObjectLambdaAccessPoint.Arn
      Policies:
        - AmazonS3FullAccess
        - AWSLambda_FullAccess
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref GetS3ObjectApi
            Path: "/anonymize-object/{id}"
            Method: get

Outputs:
  PrivacyAccessApi:
    Description: "Privacy Access Endpoint Url"
    Value: !Sub "https://${GetS3ObjectApi}.execute-api.${AWS::Region}.amazonaws.com/${deploymentEnvironment}/anonymize-object/"

  PrivacyAccessApiExample:
    Description: "Privacy Access Endpoint Url"
    Value: !Sub "https://${GetS3ObjectApi}.execute-api.${AWS::Region}.amazonaws.com/${deploymentEnvironment}/anonymize-object/test.jpg?purposeToken=Reasearch"