AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  deploymentEnvironment:
    Type: String
    Default: test
  S3BucketName:
    Type: String
    Default: peng-data
Globals:
  Function:
    Timeout: 300
    MemorySize: 1024
Resources:
  PrivacyLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://peng-runtime/19d5217e887d89c4223aa7ff14123f41
      Runtime: nodejs16.x
      Handler: privacy-lambda.handler
      Policies:
      - AmazonS3FullAccess
    Metadata:
      SamResourceId: PrivacyLambda
  SupportAccessPoint:
    Type: AWS::S3::AccessPoint
    Properties:
      Bucket:
        Ref: S3BucketName
      Name:
        Fn::Sub: ${AWS::StackName}-support
    Metadata:
      SamResourceId: SupportAccessPoint
  PrivacyS3ObjectLambdaAccessPoint:
    Type: AWS::S3ObjectLambda::AccessPoint
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-anon
      ObjectLambdaConfiguration:
        SupportingAccessPoint:
          Fn::Sub: arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${SupportAccessPoint}
        TransformationConfigurations:
        - Actions:
          - GetObject
          ContentTransformation:
            AwsLambda:
              FunctionArn:
                Fn::GetAtt:
                - PrivacyLambda
                - Arn
    Metadata:
      SamResourceId: PrivacyS3ObjectLambdaAccessPoint
  GetS3ObjectApi:
    Type: AWS::Serverless::Api
    Properties:
      BinaryMediaTypes:
      - '*/*'
      StageName:
        Ref: deploymentEnvironment
    Metadata:
      SamResourceId: GetS3ObjectApi
  GetS3ObjectLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://peng-runtime/19d5217e887d89c4223aa7ff14123f41
      Runtime: python3.8
      Handler: get-object.lambda_handler
      Environment:
        Variables:
          S3_ACCESS_POINT:
            Fn::GetAtt:
            - PrivacyS3ObjectLambdaAccessPoint
            - Arn
      Policies:
      - AmazonS3FullAccess
      - AWSLambda_FullAccess
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId:
              Ref: GetS3ObjectApi
            Path: /objects/{id}
            Method: get
    Metadata:
      SamResourceId: GetS3ObjectLambda
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint for testdata.csv
    Value:
      Fn::Sub: https://${GetS3ObjectApi}.execute-api.${AWS::Region}.amazonaws.com/${deploymentEnvironment}/objects/testdata.csv
