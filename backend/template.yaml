AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs16.x
    Timeout: 10
    MemorySize: 512
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowMethods: "'*'"
      AllowHeaders: "'*'"

Resources:
  # Shared Api Gateway for csv and photo archive
  MyS3Api:
    Type: 'AWS::Serverless::Api'
    Properties:
      Name: !Sub "${AWS::StackName}-api" 
      StageName: Test
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
      BinaryMediaTypes:
        - '*/*'

  ### Jpg archive service ###

  # AWS S3 Bucket for storing jpg files
  JpgBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "${AWS::StackName}-jpg"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # Serverless rest microservice for accessing jpg files from the s3 bucket
  JpgApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: jpg-archive/
      Handler: app.handler
      Runtime: nodejs16.x
      Environment:
        Variables:
          BUCKET_NAME: !Ref JpgBucket
      Policies: AmazonS3FullAccess
      Events:
        GetJpg:
          Type: Api
          Properties:
            RestApiId: !Ref MyS3Api
            Path: /jpg-archive/{id}
            Method: any
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyS3Api
            Path: /jpg-archive/
            Method: get
        PostRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyS3Api
            Path: /jpg-archive/
            Method: post

  ###  Csv archive service ###

  # AWS S3 Bucket for storing csv files
  CsvBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "${AWS::StackName}-csv"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  
  # Serverless rest microservice for accessing jpg files from the s3 bucket
  CsvApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: csv-archive/
      Handler: app.handler
      Runtime: nodejs16.x
      Environment:
        Variables:
          BUCKET_NAME: !Ref CsvBucket
      Policies: AmazonS3FullAccess
      Events:
        GetCsvItem:
          Type: Api
          Properties:
            RestApiId: !Ref MyS3Api
            Path: /csv-archive/{id}
            Method: any
        GetCsvRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyS3Api
            Path: /csv-archive/
            Method: get
        PostCsvRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyS3Api
            Path: /csv-archive/
            Method: post

  ### Privacy Access Points ###

  PrivacyCsvAccessPoint:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "../privacy-component/output-template.yaml"
      Parameters:
        S3BucketName: !Ref CsvBucket
        Interceptors: '["CovidResearchCSVInterceptor", "StatisticsCSVInterceptor", "MinistryOfHealthCSVInterceptor"]'

  PrivacyJpgAccessPoint:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "../privacy-component/output-template.yaml"
      Parameters:
        S3BucketName: !Ref JpgBucket
        Interceptors: '["TUCancerResearchJPGInterceptor", "ResearchJPGInterceptor", "NoMetadataJPGInterceptor"]'


Outputs:
  NormalJpgRestApi:
    Description: "Severless normal REST api for jpg files"
    Value: !Sub  "https://${MyS3Api}.execute-api.${AWS::Region}.amazonaws.com/Test/jpg-archive/"
  PrivacyConformJpgApi:
    Description: "Severless privacy conform api for jpg files"
    Value: !GetAtt PrivacyJpgAccessPoint.Outputs.PrivacyAccessApi
  NormalCsvRestApi:
    Description: "Severless REST api for csv data"
    Value: !Sub  "https://${MyS3Api}.execute-api.${AWS::Region}.amazonaws.com/Test/csv-archive/"
  PrivacyConformCsvApi:
    Description: "Severless privacy conform api for csv files"
    Value: !GetAtt PrivacyCsvAccessPoint.Outputs.PrivacyAccessApi