AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs16.x
    Timeout: 10
    MemorySize: 512
  Api:
    Cors:
      AllowOrigin: '''*'''
      AllowMethods: '''*'''
      AllowHeaders: '''*'''
Resources:
  MyS3Api:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-api
      StageName: Test
      Cors:
        AllowOrigin: '''*'''
        AllowMethods: '''*'''
        AllowHeaders: '''*'''
      BinaryMediaTypes:
      - '*/*'
    Metadata:
      SamResourceId: MyS3Api
  JpgBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-jpg
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Metadata:
      SamResourceId: JpgBucket
  JpgApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://peng-proto-package/090e447a79e4485b581f578304b8e739
      Handler: app.handler
      Runtime: nodejs16.x
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: JpgBucket
      Policies: AmazonS3FullAccess
      Events:
        GetJpg:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyS3Api
            Path: /jpg-archive/{id}
            Method: any
        GetRoot:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyS3Api
            Path: /jpg-archive/
            Method: get
        PostRoot:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyS3Api
            Path: /jpg-archive/
            Method: post
    Metadata:
      SamResourceId: JpgApi
  CsvBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-csv
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    Metadata:
      SamResourceId: CsvBucket
  CsvApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://peng-proto-package/a12faad4427dcc276a2056261d8733b7
      Handler: app.handler
      Runtime: nodejs16.x
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: CsvBucket
      Policies: AmazonS3FullAccess
      Events:
        GetCsvItem:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyS3Api
            Path: /csv-archive/{id}
            Method: any
        GetCsvRoot:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyS3Api
            Path: /csv-archive/
            Method: get
        PostCsvRoot:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyS3Api
            Path: /csv-archive/
            Method: post
    Metadata:
      SamResourceId: CsvApi
  PrivacyCsvAccessPoint:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/peng-proto-package/481cb3c8f6ee2e8f9b70000ca10bbc1b.template
      Parameters:
        S3BucketName:
          Ref: CsvBucket
    Metadata:
      SamResourceId: PrivacyCsvAccessPoint
  PrivacyJpgAccessPoint:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/peng-proto-package/481cb3c8f6ee2e8f9b70000ca10bbc1b.template
      Parameters:
        S3BucketName:
          Ref: JpgBucket
    Metadata:
      SamResourceId: PrivacyJpgAccessPoint
Outputs:
  NormalJpgRestApi:
    Description: Severless normal REST api for jpg files
    Value:
      Fn::Sub: https://${MyS3Api}.execute-api.${AWS::Region}.amazonaws.com/Test/jpg-archive/
  PrivacyConformJpgApi:
    Description: Severless privacy conform api for jpg files
    Value:
      Fn::GetAtt:
      - PrivacyJpgAccessPoint
      - Outputs.PrivacyAccessApi
  NormalCsvRestApi:
    Description: Severless REST api for csv data
    Value:
      Fn::Sub: https://${MyS3Api}.execute-api.${AWS::Region}.amazonaws.com/Test/csv-archive/
  PrivacyConformCsvApi:
    Description: Severless privacy conform api for csv files
    Value:
      Fn::GetAtt:
      - PrivacyCsvAccessPoint
      - Outputs.PrivacyAccessApi
